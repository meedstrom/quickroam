* Quickroam
** The problem
Is your org-roam slow?

If you're like me, you think org-roam has the right idea, the right abstractions and a good mental model, but as it stands, you can't really rely on the implementation for day-to-day work.

1. The porcelain commands take 5 seconds to get the minibuffer ready, which I worked around by [[https://edstrom.dev/czdfr/org-roam-fixes#jxbqt][memoizing them]].  That's a neat solution most of the time, but if I create a new node and immediately want to insert it elsewhere, I have to wait for an idle timer to update the memoization.  Mild annoyance, but OK on its own.

2. I have a couple of Org files so large that I ended up disabling =org-roam-db-autosync-mode=, because it spends 10 seconds scanning the file on every save.  With it disabled, the DB stays out of sync until I manually run =M-x org-roam-db-sync=!  I can also put it on after 5 minutes of idle, but yea, not great when you're in the zone and writing.

As best I can tell by reading the source code, problems #1 and #2 are totally separate.  Problem #1 /should/ be fixable, but #2 arises from the fact that org-roam is very generalized -- for example, it lets you plug in user-defined functions to exclude or include a node.  That's wonderful, but it means that org-roam is forced to load org-mode in every file to scan them, incurring all the performance penalties of doing so.

(And I suspect there's something else wrong -- /just/ loading org-mode doesn't take that long)

Reliance on org-mode also leaves us fragile to bugs in the org element parser.  I've been lugging many such bugs since 9.5, so it'd be nice if I could still write without running into a blank org-roam DB.

** Fix

This package fixes both of above problems via alternatives to common commands:

- =org-roam-node-find= -- use =quickroam-find=
- =org-roam-node-insert= -- use =quickroam-insert=

These don't look up the org-roam DB at all, and just rely on ripgrep instead.

** Future work

This package could be extended to collect all the data needed for an org-roam-node object, then use it to populate the SQL database so we can stop using =org-roam-db-sync= altogether.

We "just" have to design a better regexp.  As it is, it just grabs titles and IDs, which satisfies the current purpose.

It would impose some limitations on org-roam's hackability, but perhaps that's worth it.
